@using MoslemToolkit.Models
@using MoslemToolkit.Data
@inject IJSRuntime jsRuntime
@*@namespace MoslemToolkit.Pages.Master*@
@using System.IO
@inject IToastService toastService

<div class="modal" tabindex="-1" role="dialog" id="taskModal">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@CustomHeader</h5>


                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <EditForm Model="@TaskObject" OnValidSubmit="@HandleValidSubmit">
                    <DataAnnotationsValidator />

                    <div class="form-group">
                        <label for="nama">Kode Barang</label>
                        <input type="hidden" @bind-value="@TaskObject.Id" />
                        <InputText id="kode" class="form-control" @bind-Value="@TaskObject.KodeBarang" />
                        <ValidationMessage For="@(() => TaskObject.KodeBarang)" />
                    </div>
                     <div class="form-group">
                        <label for="nama">Nama</label>
                        <InputText id="nama" class="form-control" @bind-Value="@TaskObject.NamaBarang" />
                        <ValidationMessage For="@(() => TaskObject.NamaBarang)" />
                    </div>
                    <div class="form-group">
                        <label for="merek">Merek</label>
                        <InputText id="merek" class="form-control" @bind-Value="@TaskObject.Merek" />
                        <ValidationMessage For="@(() => TaskObject.Merek)" />
                    </div>
                    <div class="form-group">
                        <label for="nosertifikat">No Sertifikat / Identifikasi Barang</label>
                        <InputText id="nosertifikat" class="form-control" @bind-Value="@TaskObject.NoSertifikat" />
                        <ValidationMessage For="@(() => TaskObject.NoSertifikat)" />
                    </div> 
                    <div class="form-group">
                        <label for="ukuran">Ukuran (sertakan satuan)</label>
                        <InputText id="ukuran" class="form-control" @bind-Value="@TaskObject.Ukuran" />
                        <ValidationMessage For="@(() => TaskObject.Ukuran)" />
                    </div>
                     <div class="form-group">
                        <label for="jumlah">Jumlah</label>
                        <InputNumber id="jumlah" class="form-control" @bind-Value="@TaskObject.Jumlah" />
                        <ValidationMessage For="@(() => TaskObject.Jumlah)" />
                    </div>
                     <div class="form-group">
                        <label for="keterangan">Keterangan</label>
                        <InputTextArea id="keterangan" class="form-control" @bind-Value="@TaskObject.Keterangan" />
                        <ValidationMessage For="@(() => TaskObject.Keterangan)" />
                    </div>
                    <div class="form-group">
                        <label for="lokasi">Lokasi</label>
                        <InputText id="lokasi" class="form-control" @bind-Value="@TaskObject.Lokasi" />
                        <ValidationMessage For="@(() => TaskObject.Lokasi)" />
                    </div>
                    <div class="form-group">
                        <label for="cara">Cara Perolehan</label>
                        
                        <select class="form-control" @bind="@TaskObject.CaraPerolehan">
       
                            <option value="">Pilih</option>
                            <option value="Sodakoh Jamaah">Sodakoh Jamaah</option>
                            <option value="Pembelian Kelompok">Pembelian Kelompok</option>
                            <option value="Hibah">Hibah</option>
                            <option value="Bantuan Pemerintah">Bantuan Pemerintah</option>
                            <option value="Lainnya">Lainnya</option>
        
                        </select>
                        <ValidationMessage For="@(() => TaskObject.CaraPerolehan)" />
                    </div>
                    <div class="form-group">
                        <label for="tanggal">Tanggal Perolehan</label>
                        <InputDate id="tanggal" class="form-control" @bind-Value="@TaskObject.TanggalPerolehan" />
                        <ValidationMessage For="@(() => TaskObject.TanggalPerolehan)" />
                    </div>
                    <div class="form-group">
                        <label for="kondisi">Kondisi Barang</label>
                        
                        <select class="form-control" @bind="@TaskObject.Kondisi">
       
                            <option value="">Pilih</option>
                            <option value="Baik">Baik</option>
                            <option value="Kurang Baik">Kurang Baik</option>
                            <option value="Rusak">Rusak</option>
                            <option value="Hilang">Hilang</option>
                            <option value="Tidak Diketahui">Tidak Diketahui</option>
        
                        </select>
                        <ValidationMessage For="@(() => TaskObject.Kondisi)" />
                    </div>
                    



                    <button type="submit" class="btn btn-primary">Simpan</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                </EditForm>

            </div>
        </div>
    </div>
</div>

@code {

    public string FileUrl { get; set; }
    [Parameter]
    public RenderFragment CustomHeader { get; set; }
    [Parameter]
    public Aset TaskObject { get; set; }
    [Parameter]
    public Action DataChanged { get; set; }
    MoslemToolkit.Data.AsetService service;
    protected override async Task OnInitializedAsync()
    {
        if (service == null) service = new AsetService();

    }
    private async void HandleValidSubmit()
    {


        if (TaskObject.Id == 0)
        {

            service.InsertData(TaskObject);

        }
        else
        {
            service.UpdateData(TaskObject);
        }

        await CloseTaskModal();
        DataChanged?.Invoke();
    }



    private async Task CloseTaskModal()
    {
        await jsRuntime.InvokeAsync<object>("CloseModal", "taskModal");
    }


}